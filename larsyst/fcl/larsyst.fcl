process_name: GenieEventWeight

services: {
  scheduler: { defaultExceptions: false } # Make all uncaught exceptions fatal.
}

source: {
  module_type: RootInput
  maxEvents: -1 # Number of events to create
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 producers:{
   eventsyst: { module_type: "LArEventResponse" }
 }

 #define the output stream, there could be more than one if using filters
 stream1: [out1]

 stash_weights: [eventsyst]

 trigger_paths: [stash_weights]

 #end_paths is a keyword and contains the paths that do not modify the art::Event,
 #ie analyzers and output streams. these all run simultaneously
 end_paths: [stream1]
}


#block to define where the output goes. if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName: "stashed_weights.root"
 }
}
